{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seted\\\\Desktop\\\\Projects\\\\EBAC\\\\exercicios\\\\contacts-list\\\\to-do_list\\\\src\\\\containers\\\\ListaDeTarefas\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport Tarefa from '../../components/Tarefa';\nimport { MainContainer, Titulo } from '../../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListaDeTarefas = () => {\n  _s();\n  const {\n    itens\n  } = useSelector(state => state.tarefas);\n  const {\n    termo,\n    criterio,\n    valor\n  } = useSelector(state => state.filtro);\n  const filtraTarefas = () => {\n    let tarefasFiltradas = itens;\n    if (termo !== undefined) {\n      tarefasFiltradas = tarefasFiltradas.filter(item => item.titulo.toLowerCase().search(termo.toLowerCase()) >= 0);\n      if (criterio === 'prioridade') {\n        tarefasFiltradas = tarefasFiltradas.filter(item => item.prioridade === valor);\n      } else if (criterio === 'status') {\n        tarefasFiltradas = tarefasFiltradas.filter(item => item.status === valor);\n      }\n      return tarefasFiltradas;\n    } else {\n      return itens;\n    }\n  };\n  const exibeResultadoFiltrado = quantidade => {\n    let mensagem = '';\n    const complementacao = termo !== undefined && termo.length > 0 ? `e \"${termo}\"` : '';\n    if (criterio === 'todas') {\n      mensagem = `${quantidade} tarefa(s) encontradas como: todas ${complementacao}`;\n    } else {\n      mensagem = `${quantidade} tarefa(s) encontradas como: \"${`${criterio}=${valor}`}\" ${complementacao}`;\n    }\n    return mensagem;\n  };\n  const tarefas = filtraTarefas();\n  const mensagem = exibeResultadoFiltrado(tarefas.length);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Titulo, {\n      as: \"p\",\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Tarefa, {\n          id: t.id,\n          titulo: t.titulo,\n          descricao: t.descricao,\n          status: t.status,\n          prioridade: t.prioridade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, t.titulo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ListaDeTarefas, \"Etfatq1GPg1U/59pM0V2cL6YAI4=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = ListaDeTarefas;\nexport default ListaDeTarefas;\nvar _c;\n$RefreshReg$(_c, \"ListaDeTarefas\");","map":{"version":3,"names":["useSelector","Tarefa","MainContainer","Titulo","jsxDEV","_jsxDEV","ListaDeTarefas","_s","itens","state","tarefas","termo","criterio","valor","filtro","filtraTarefas","tarefasFiltradas","undefined","filter","item","titulo","toLowerCase","search","prioridade","status","exibeResultadoFiltrado","quantidade","mensagem","complementacao","length","children","as","fileName","_jsxFileName","lineNumber","columnNumber","map","t","id","descricao","_c","$RefreshReg$"],"sources":["C:/Users/seted/Desktop/Projects/EBAC/exercicios/contacts-list/to-do_list/src/containers/ListaDeTarefas/index.tsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport Tarefa from '../../components/Tarefa'\r\nimport { MainContainer, Titulo } from '../../styles'\r\nimport { RootReducer } from '../../store'\r\n\r\nconst ListaDeTarefas = () => {\r\n  const { itens } = useSelector((state: RootReducer) => state.tarefas)\r\n  const { termo, criterio, valor } = useSelector(\r\n    (state: RootReducer) => state.filtro\r\n  )\r\n\r\n  const filtraTarefas = () => {\r\n    let tarefasFiltradas = itens\r\n    if (termo !== undefined) {\r\n      tarefasFiltradas = tarefasFiltradas.filter(\r\n        (item) => item.titulo.toLowerCase().search(termo.toLowerCase()) >= 0\r\n      )\r\n\r\n      if (criterio === 'prioridade') {\r\n        tarefasFiltradas = tarefasFiltradas.filter(\r\n          (item) => item.prioridade === valor\r\n        )\r\n      } else if (criterio === 'status') {\r\n        tarefasFiltradas = tarefasFiltradas.filter(\r\n          (item) => item.status === valor\r\n        )\r\n      }\r\n      return tarefasFiltradas\r\n    } else {\r\n      return itens\r\n    }\r\n  }\r\n\r\n  const exibeResultadoFiltrado = (quantidade: number) => {\r\n    let mensagem = ''\r\n    const complementacao =\r\n      termo !== undefined && termo.length > 0 ? `e \"${termo}\"` : ''\r\n\r\n    if (criterio === 'todas') {\r\n      mensagem = `${quantidade} tarefa(s) encontradas como: todas ${complementacao}`\r\n    } else {\r\n      mensagem = `${quantidade} tarefa(s) encontradas como: \"${`${criterio}=${valor}`}\" ${complementacao}`\r\n    }\r\n\r\n    return mensagem\r\n  }\r\n\r\n  const tarefas = filtraTarefas()\r\n  const mensagem = exibeResultadoFiltrado(tarefas.length)\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Titulo as=\"p\">{mensagem}</Titulo>\r\n      <ul>\r\n        {tarefas.map((t) => (\r\n          <li key={t.titulo}>\r\n            <Tarefa\r\n              id={t.id}\r\n              titulo={t.titulo}\r\n              descricao={t.descricao}\r\n              status={t.status}\r\n              prioridade={t.prioridade}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </MainContainer>\r\n  )\r\n}\r\n\r\nexport default ListaDeTarefas\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
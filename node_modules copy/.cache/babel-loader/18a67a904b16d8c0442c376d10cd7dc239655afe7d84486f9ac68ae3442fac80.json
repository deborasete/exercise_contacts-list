{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport * as enums from '../../utils/enums/Tarefa';\nconst initialState = {\n  itens: [{\n    id: 1,\n    descricao: 'Débora Sete Acosta',\n    prioridade: enums.Prioridade.NORMAL,\n    status: enums.Status.CONCLUIDA,\n    titulo: 'Débora Sete Acosta'\n  }, {\n    id: 2,\n    descricao: 'Maria Sete Acosta',\n    prioridade: enums.Prioridade.NORMAL,\n    status: enums.Status.PENDENTE,\n    titulo: 'Maria Consuelo'\n  }, {\n    id: 3,\n    descricao: 'João Sete Acosta',\n    prioridade: enums.Prioridade.IMPORTANTE,\n    status: enums.Status.PENDENTE,\n    titulo: 'Estudar Bootstrap'\n  }]\n};\nconst tarefasSlice = createSlice({\n  name: 'tarefas',\n  initialState,\n  reducers: {\n    remover: (state, action) => {\n      state.itens = state.itens.filter(tarefa => tarefa.id !== action.payload);\n    },\n    editar: (state, action) => {\n      const indexDaTarefa = state.itens.findIndex(t => t.id === action.payload.id);\n      if (indexDaTarefa >= 0) {\n        state.itens[indexDaTarefa] = action.payload;\n      }\n    },\n    cadastrar: (state, action) => {\n      const tarefaJaExiste = state.itens.find(tarefa => tarefa.titulo.toLowerCase() === action.payload.titulo.toLowerCase());\n      if (tarefaJaExiste) {\n        alert('Já existe uma tarefa com esse nome');\n      } else {\n        const ultimaTarefa = state.itens[state.itens.length - 1];\n        const tarefaNova = {\n          ...action.payload,\n          id: ultimaTarefa ? ultimaTarefa.id + 1 : 1\n        };\n        state.itens.push(tarefaNova);\n      }\n    },\n    alteraStatus: (state, action) => {\n      const indexDaTarefa = state.itens.findIndex(t => t.id === action.payload.id);\n      if (indexDaTarefa >= 0) {\n        state.itens[indexDaTarefa].status = action.payload.finalizado ? enums.Status.CONCLUIDA : enums.Status.PENDENTE;\n      }\n    }\n  }\n});\nexport const {\n  remover,\n  editar,\n  cadastrar,\n  alteraStatus\n} = tarefasSlice.actions;\nexport default tarefasSlice.reducer;","map":{"version":3,"names":["createSlice","enums","initialState","itens","id","descricao","prioridade","Prioridade","NORMAL","status","Status","CONCLUIDA","titulo","PENDENTE","IMPORTANTE","tarefasSlice","name","reducers","remover","state","action","filter","tarefa","payload","editar","indexDaTarefa","findIndex","t","cadastrar","tarefaJaExiste","find","toLowerCase","alert","ultimaTarefa","length","tarefaNova","push","alteraStatus","finalizado","actions","reducer"],"sources":["C:/Users/seted/Desktop/Projects/EBAC/exercicios/contacts-list/to-do_list/src/store/reducers/tarefas.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport Tarefa from '../../models/Tarefa'\nimport * as enums from '../../utils/enums/Tarefa'\n\ntype TarefasState = {\n  itens: Tarefa[]\n}\n\nconst initialState: TarefasState = {\n  itens: [\n    {\n      id: 1,\n      descricao: 'Débora Sete Acosta',\n      prioridade: enums.Prioridade.NORMAL,\n      status: enums.Status.CONCLUIDA,\n      titulo: 'Débora Sete Acosta'\n    },\n    {\n      id: 2,\n      descricao: 'Maria Sete Acosta',\n      prioridade: enums.Prioridade.NORMAL,\n      status: enums.Status.PENDENTE,\n      titulo: 'Maria Consuelo'\n    },\n    {\n      id: 3,\n      descricao: 'João Sete Acosta',\n      prioridade: enums.Prioridade.IMPORTANTE,\n      status: enums.Status.PENDENTE,\n      titulo: 'Estudar Bootstrap'\n    }\n  ]\n}\n\nconst tarefasSlice = createSlice({\n  name: 'tarefas',\n  initialState,\n  reducers: {\n    remover: (state, action: PayloadAction<number>) => {\n      state.itens = state.itens.filter((tarefa) => tarefa.id !== action.payload)\n    },\n    editar: (state, action: PayloadAction<Tarefa>) => {\n      const indexDaTarefa = state.itens.findIndex(\n        (t) => t.id === action.payload.id\n      )\n      if (indexDaTarefa >= 0) {\n        state.itens[indexDaTarefa] = action.payload\n      }\n    },\n    cadastrar: (state, action: PayloadAction<Omit<Tarefa, 'id'>>) => {\n      const tarefaJaExiste = state.itens.find(\n        (tarefa) =>\n          tarefa.titulo.toLowerCase() === action.payload.titulo.toLowerCase()\n      )\n\n      if (tarefaJaExiste) {\n        alert('Já existe uma tarefa com esse nome')\n      } else {\n        const ultimaTarefa = state.itens[state.itens.length - 1]\n\n        const tarefaNova = {\n          ...action.payload,\n          id: ultimaTarefa ? ultimaTarefa.id + 1 : 1\n        }\n        state.itens.push(tarefaNova)\n      }\n    },\n    alteraStatus: (\n      state,\n      action: PayloadAction<{ id: number; finalizado: boolean }>\n    ) => {\n      const indexDaTarefa = state.itens.findIndex(\n        (t) => t.id === action.payload.id\n      )\n      if (indexDaTarefa >= 0) {\n        state.itens[indexDaTarefa].status = action.payload.finalizado\n          ? enums.Status.CONCLUIDA\n          : enums.Status.PENDENTE\n      }\n    }\n  }\n})\n\nexport const { remover, editar, cadastrar, alteraStatus } = tarefasSlice.actions\n\nexport default tarefasSlice.reducer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}